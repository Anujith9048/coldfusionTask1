/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var SSLA;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SSLA = void 0;\nvar config_1 = __webpack_require__(/*! ./config */ \"./src/config.ts\");\nvar detector_1 = __webpack_require__(/*! ./detector */ \"./src/detector.ts\");\nvar open_1 = __webpack_require__(/*! ./open */ \"./src/open.ts\");\nvar version_1 = __webpack_require__(/*! ./version */ \"./src/version.ts\");\nvar Message = __importStar(__webpack_require__(/*! ./message */ \"./src/message.ts\"));\nvar SSLA = /** @class */ (function () {\n    function SSLA() {\n        this.config = null;\n        this.ctd = null;\n        this.plugins = {};\n        this.version = version_1.VERSION;\n        // This makes the popupManually function available publicly to simplify access to popup blockers.\n        this.popupManually = open_1.popupManually;\n        this.config = new config_1.SSLAConfiguration();\n        this.ctd = new detector_1.CourseTypeDetector();\n    }\n    SSLA.prototype.cleanup = function () {\n        this.activePlugin.cleanup();\n    };\n    /**\n     * If a SCO or AU is open for any plugin format, close it and leave the player in unselected SCO state.\n     */\n    SSLA.prototype.closeActiveContent = function () {\n        this.activePlugin.closeActiveContent();\n    };\n    SSLA.prototype.exit = function () {\n        (0, open_1.cleanupOnExit)(this.config);\n        switch (this.config.exitAction()) {\n            case \"none\":\n                // Intentionally do nothing.\n                break;\n            case \"close\":\n                try {\n                    window.close();\n                }\n                catch (e) { }\n                try {\n                    //top.window.close();\n                }\n                catch (e) { }\n                break;\n            case \"referrer\":\n                window.location.href = document.referrer;\n                break;\n            case \"url\":\n                window.location.href = this.config.exitUrl();\n                break;\n            case \"custom\":\n                if (this.config.exitFn()) {\n                    this.config.exitFn()();\n                }\n                else {\n                    Message.show(this.config, Message.Error, \"No function specified for exit type custom for exitFn.\");\n                }\n                break;\n            default:\n                Message.show(this.config, Message.Error, \"Exit behavior configuration option invalid: \" +\n                    this.config.exitAction());\n        }\n    };\n    SSLA.prototype.finish = function () {\n        if (this.activePlugin) {\n            this.activePlugin.finish();\n        }\n    };\n    SSLA.prototype.initCourseType = function (courseType) {\n        if (courseType === \"scorm\") {\n            if (!this.plugins[\"scorm\"]) {\n                var err = \"No SCORM plugin installed.  Please contact administrative support.\";\n                Message.show(this.config, Message.Error, err);\n            }\n            else {\n                this.activePluginType = \"scorm\";\n                this.activePlugin = this.plugins[\"scorm\"];\n            }\n        }\n        else if (courseType === \"xapi\") {\n            if (!this.plugins[\"xapi\"]) {\n                var err = \"No XAPI plugin installed.  Please contact administrative support.\";\n                Message.show(this.config, Message.Error, err);\n            }\n            else {\n                this.activePluginType = \"xapi\";\n                this.activePlugin = this.plugins[\"xapi\"];\n            }\n        }\n        else if (courseType === \"aicc\") {\n            if (!this.plugins[\"aicc\"]) {\n                var err = \"No AICC plugin installed.  Please contact administrative support.\";\n                Message.show(this.config, Message.Error, err);\n            }\n            else {\n                this.activePluginType = \"aicc\";\n                this.activePlugin = this.plugins[\"aicc\"];\n            }\n        }\n        else if (courseType === \"cmi5\") {\n            if (!this.plugins[\"cmi5\"]) {\n                var err = \"No cmi5 plugin installed.  Please contact administrative support.\";\n                Message.show(this.config, Message.Error, err);\n            }\n            else {\n                this.activePluginType = \"cmi5\";\n                this.activePlugin = this.plugins[\"cmi5\"];\n            }\n        }\n        else {\n            // TODO Make this more inline?\n            // TODO Have a configuration option to play courses we don't know the type of?\n            // TODO Can we print the missing manifest filename if we only have one plugin type?\n            var err = \"Could not find any manifest file for supported course types in the specified folder.  Please check the directory containing your course and try again.\\n\" +\n                \"Course types supported by this build: \" +\n                Object.keys(this.plugins).join(\",\") +\n                \"\\n\";\n            Message.show(this.config, Message.Error, err);\n        }\n        if (this.activePlugin) {\n            this.activePlugin.start();\n        }\n    };\n    SSLA.prototype.interstitialReady = function () {\n        this.activePlugin.interstitialReady();\n    };\n    SSLA.prototype.navigate = function (type) {\n        if (this.activePlugin) {\n            if (type === \"exit\") {\n                this.exit();\n            }\n            else {\n                this.activePlugin.navigate(type);\n            }\n        }\n    };\n    SSLA.prototype.navigateByIdentifier = function (id) {\n        if (this.activePlugin) {\n            this.activePlugin.navigateByIdentifier(id);\n        }\n    };\n    SSLA.prototype.registerPlugin = function (name, plugin) {\n        this.plugins[name] = plugin;\n        plugin.config = this.config;\n        plugin.ctd = this.ctd;\n        if (name == \"scorm\") {\n            this.scorm = plugin;\n        }\n    };\n    SSLA.prototype.setConfigurationSource = function (externalConfig) {\n        this.config._updateExternalConfigSource(externalConfig);\n    };\n    SSLA.prototype.start = function () {\n        // Initialize the main content frame.\n        var p = document.getElementById(\"frame-here\");\n        p.innerHTML =\n            '<iframe id=\"' +\n                this.config.frameId() +\n                '\" name=\"' +\n                this.config.frameId() +\n                '\" frameborder=\"0\" width=\"100%\" height=\"100%\" src=\"' +\n                this.config.frameDefaultUrl() +\n                '\" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>';\n        if (this.config.learningSpecification() == \"\") {\n            this.ctd.identify(this.config, this.plugins, this.initCourseType.bind(this));\n        }\n        else {\n            var plugin = this.plugins[this.config.learningSpecification()];\n            if (!plugin) {\n                var err = \"Plugin mode could not be found: \" +\n                    this.config.learningSpecification();\n                Message.show(this.config, Message.Error, err);\n                return;\n            }\n            this.activePluginType = this.config.learningSpecification();\n            this.activePlugin = plugin;\n            plugin.start();\n        }\n    };\n    return SSLA;\n}());\nexports.SSLA = SSLA;\nwindow.SSLA = SSLA;\n\n\n//# sourceURL=webpack://SSLA/./src/app.ts?");

/***/ }),

/***/ "./src/config.ts":
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SSLAConfiguration = void 0;\nvar Path = __importStar(__webpack_require__(/*! ./path */ \"./src/path.ts\"));\nvar url_1 = __webpack_require__(/*! ./url */ \"./src/url.ts\");\nvar BasicConfiguration = /** @class */ (function () {\n    function BasicConfiguration() {\n        this.externalConfig = null;\n    }\n    BasicConfiguration.prototype.aiccAuFilename = function () {\n        return \"course.au\";\n    };\n    BasicConfiguration.prototype.aiccCourseFilename = function () {\n        return \"course.crs\";\n    };\n    BasicConfiguration.prototype.aiccDescriptorFilename = function () {\n        return \"course.des\";\n    };\n    BasicConfiguration.prototype.aiccEndpoint = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.aiccLoadRelativeToAu = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.aiccRawAu = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.aiccRawCourse = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.aiccRawDescriptor = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.aiccRawStructure = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.aiccSessionId = function (systemId) {\n        return \"SESSION_ID_HERE\";\n    };\n    BasicConfiguration.prototype.aiccStructureFilename = function () {\n        return \"course.cst\";\n    };\n    BasicConfiguration.prototype.autoLaunchFirstSco = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.closePopupSingleScoBehavior = function () {\n        return \"exit\";\n    };\n    BasicConfiguration.prototype.closePopupMultiScoBehavior = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.closePopupSingleScoCustomFunction = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.closePopupMultiScoCustomFunction = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.cmi5ManifestFilename = function () {\n        return \"cmi5.xml\";\n    };\n    BasicConfiguration.prototype.courseBaseHtmlPath = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.commentsFromLMS = function (sco) {\n        return [];\n    };\n    BasicConfiguration.prototype.courseDirectory = function () {\n        if (url_1.UrlVarService.get(\"courseDirectory\").charAt(0) === \"/\") {\n            return url_1.UrlVarService.get(\"courseDirectory\");\n        }\n        if (this.externalConfig) {\n            return Path.join([\n                this.externalConfig.courseBaseHtmlPath(),\n                url_1.UrlVarService.get(\"courseDirectory\"),\n            ]);\n        }\n        return Path.join([\n            this.courseBaseHtmlPath(),\n            url_1.UrlVarService.get(\"courseDirectory\"),\n        ]);\n    };\n    BasicConfiguration.prototype.courseId = function () {\n        return url_1.UrlVarService.get(\"courseId\");\n    };\n    /**\n     * Valid options:\n     * \"none\": Do nothing.  Useful for external management of unload behavior.\n     * \"close\": Attempt to close the current window.\n     * \"referrer\": Redirect to the referrer URL.\n     * \"url\": Redirect to a URL.\n     * \"custom\": Call a custom exit function, defined by exitFn().\n     * @returns {string}\n     */\n    BasicConfiguration.prototype.exitAction = function () {\n        return \"referrer\";\n    };\n    BasicConfiguration.prototype.exitFn = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.exitUrl = function () {\n        return \"blank_unloading.htm\";\n    };\n    BasicConfiguration.prototype.frameDefaultUrl = function () {\n        return \"blank.htm\";\n    };\n    BasicConfiguration.prototype.frameId = function () {\n        return \"jca_course_player\";\n    };\n    BasicConfiguration.prototype.frameInterstitialUrl = function () {\n        return \"int.htm\";\n    };\n    BasicConfiguration.prototype.getCredit = function () {\n        return url_1.UrlVarService.get(\"credit\");\n    };\n    BasicConfiguration.prototype.getDataAjaxMethod = function () {\n        return \"POST\";\n    };\n    BasicConfiguration.prototype.getDataHeaders = function () {\n        return {};\n    };\n    BasicConfiguration.prototype.getDataUrl = function () {\n        return \"/trackAllInOne/get\";\n    };\n    BasicConfiguration.prototype.getMode = function () {\n        return url_1.UrlVarService.get(\"mode\");\n    };\n    BasicConfiguration.prototype.initializeScoAtOpen = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.launchDataAllowOverride = function (scoId) {\n        return false;\n    };\n    BasicConfiguration.prototype.launchDataOverride = function (scoId) {\n        return \"\";\n    };\n    /**\n     * Provide a custom function to perform layout updates based on the system state, including information about the\n     * course itself (single SCO vs. multi SCO, for example).\n     * Expected function signature is single argument that can take an SSLA object.\n     * @returns {null}\n     */\n    BasicConfiguration.prototype.layoutUpdater = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.learningSpecification = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.logMessageBehavior = function () {\n        return \"alertErrorOnly\";\n    };\n    BasicConfiguration.prototype.logMessageCustomFunction = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.looseIdentifiers = function () {\n        return false;\n    };\n    /**\n     * Valid options:\n     * \"none\" or \"\": ignore the mastery score altogether\n     * \"always\": apply mastery score on finish if it exists, in all cases where a cmi.core.score.raw is set to an actual value. (edited)\n     * \"after_completion\" (default): apply mastery score on finish only if cmi.core.lesson_status is “completed” (or the equivalent version of this in SCORM 2004)\n     */\n    BasicConfiguration.prototype.masteryScoreMode = function () {\n        return \"after_completion\";\n    };\n    BasicConfiguration.prototype.modeBrowseAllowSave = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.modeReviewAllowSave = function () {\n        return true;\n    };\n    /**\n     * Valid options:\n     *   \"\": Leave it however it's currently displaying.\n     *   \"HIDE_ALL\": Hide all non-course view components.\n     *   \"HIDE_NAV_BUTTONS\": Hide the navigation header.\n     *   \"HIDE_TREE\": Hide the navigation tree.\n     * @returns {string}\n     */\n    BasicConfiguration.prototype.multiScoView = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.navigationType = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.openContentIn = function () {\n        return \"inline\";\n    };\n    BasicConfiguration.prototype.popupMainContentMessageAfterOpen = function () {\n        return \"Your course has been opened in a popup.  When you have completed your course, please make another selection from the tree, press exit or close this window.\";\n    };\n    BasicConfiguration.prototype.popupMainContentMessageFailed = function () {\n        return 'Your course window did not pop open correctly.<br>  <a onclick=\"parent.ssla.ssla.popupManually()\" href=\"#\">Click here to open the course.</a>';\n    };\n    BasicConfiguration.prototype.popupName = function () {\n        return \"sco_win\";\n    };\n    BasicConfiguration.prototype.popupWindowParams = function () {\n        return \"status=1,toolbar=1,scrollbars=1,resizable=1,alwaysRaised=1\";\n    };\n    /**\n     * Allow re-entrance to an activity after it has been initialized and before it has been terminated.\n     * @returns {boolean}\n     */\n    BasicConfiguration.prototype.reenterActivity = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.returnToLastActivityOnLaunch = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.saveDataOnCommit = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.saveDataOnSetValue = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.scoreAllowChangeAfterCompleted = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.scoreAllowChangeAfterFailed = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.scoreAllowChangeAfterPassed = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.scoreAllowReduce = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.scoreConvertNormalizedToRawMethod = function () {\n        return \"same_sign\";\n    };\n    BasicConfiguration.prototype.scoreConvertRawToNormalizedMethod = function () {\n        return \"same_sign\";\n    };\n    BasicConfiguration.prototype.scoreRollupAction = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.scoreRollupCustomFunction = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.scoreRollupIncludeScosWithNoScore = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.scorm2004Mode = function () {\n        return \"simple\";\n    };\n    BasicConfiguration.prototype.scormManifestFilename = function () {\n        return \"imsmanifest.xml\";\n    };\n    BasicConfiguration.prototype.scormManifestRawXml = function () {\n        return \"\";\n    };\n    /**\n     * If true, use scormManifestRawXml for the manifest XML body.\n     * If false, load the XML from the file referenced by scormManifestFilename.\n     * @returns {boolean}\n     */\n    BasicConfiguration.prototype.scormManifestUseRawXml = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.setDataAjaxMethod = function () {\n        return \"POST\";\n    };\n    BasicConfiguration.prototype.setDataHeaders = function () {\n        return {};\n    };\n    BasicConfiguration.prototype.setDataUrl = function () {\n        return \"/trackAllInOne/set\";\n    };\n    /**\n     * Valid options:\n     *   \"\": Leave it however it's currently displaying.\n     *   \"HIDE_ALL\": Hide all non-course view components.\n     *   \"HIDE_NAV_BUTTONS\": Hide the navigation header.\n     *   \"HIDE_TREE\": Hide the navigation tree.\n     * @returns {string}\n     */\n    BasicConfiguration.prototype.singleScoView = function () {\n        return \"\";\n    };\n    /**\n     * If true, default a lesson to \"incomplete\" instead of \"not attempted\".\n     * @returns {boolean}\n     */\n    BasicConfiguration.prototype.startIncomplete = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.statusAllowChangeAfterCompleted = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.statusAllowChangeAfterFailed = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.statusAllowChangeAfterPassed = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.statusAllowCompletionOnUnsetFinish = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.statusRollupAction = function () {\n        return \"\";\n    };\n    BasicConfiguration.prototype.statusRollupCustomFunction = function () {\n        return null;\n    };\n    /**\n     * Valid options:\n     * \"default\": Use the built in defaults.\n     * \"custom\": Call a custom function, defined by statusVisualOverrideFn().\n     * @returns {string}\n     */\n    BasicConfiguration.prototype.statusVisualOverride = function () {\n        return \"default\";\n    };\n    /**\n     * Expects a string array of current status values\n     * @returns {null}\n     */\n    BasicConfiguration.prototype.statusVisualOverrideFn = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.storageAdapter = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.storageAllowCORS = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.storageCallbackAfterLoad = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.storageCallbackAfterSave = function () {\n        return null;\n    };\n    BasicConfiguration.prototype.storageGzipRequestBody = function () {\n        return false;\n    };\n    BasicConfiguration.prototype.storageIncludeScoDetails = function () {\n        return false;\n    };\n    /**\n     * If true, any commit that comes in while a storage save call is currently active will be blocked until\n     * the previous call finishes, errors or times out.\n     */\n    BasicConfiguration.prototype.storageQueueSaves = function () {\n        return false;\n    };\n    /**\n     * If the data is not substantially different than the previous time it was saved (ignore timestamps),\n     * send it again.\n     */\n    BasicConfiguration.prototype.storageSaveDuplicateCommits = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.storageSaveFrequency = function () {\n        return 10000;\n    };\n    BasicConfiguration.prototype.storageTimeout = function () {\n        return 30000;\n    };\n    BasicConfiguration.prototype.storageUseFetch = function () {\n        try {\n            return \"keepalive\" in new Request(\"\");\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    BasicConfiguration.prototype.storageUseSaveWorker = function () {\n        try {\n            return \"Worker\" in window;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    BasicConfiguration.prototype.storageUseWithCredentials = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.studentId = function () {\n        return url_1.UrlVarService.get(\"studentId\");\n    };\n    BasicConfiguration.prototype.studentName = function () {\n        return url_1.UrlVarService.get(\"studentName\");\n    };\n    BasicConfiguration.prototype.validateDataModelLength = function () {\n        return true;\n    };\n    BasicConfiguration.prototype.xapiActor = function () {\n        return url_1.UrlVarService.get(\"actor\");\n    };\n    BasicConfiguration.prototype.xapiAuth = function () {\n        return url_1.UrlVarService.get(\"auth\");\n    };\n    BasicConfiguration.prototype.xapiEndpoint = function () {\n        return url_1.UrlVarService.get(\"endpoint\");\n    };\n    BasicConfiguration.prototype.xapiManifestFilename = function () {\n        return \"tincan.xml\";\n    };\n    /**\n     * If set, adds a registration parameter to the XAPI launch URL with whatever value is provided in the config.\n     * @returns {string}\n     */\n    BasicConfiguration.prototype.xapiRegistration = function () {\n        return url_1.UrlVarService.get(\"registration\");\n    };\n    return BasicConfiguration;\n}());\nvar SSLAConfiguration = /** @class */ (function () {\n    function SSLAConfiguration() {\n        this.baseConfig = new BasicConfiguration();\n        // Keep track of the external configuration for a given SSLA instance in relation to the internal configuration.\n        // This allows the base configuration to reference customizations where configuration values depend on others.\n        this.baseConfig.externalConfig = this;\n    }\n    SSLAConfiguration.prototype._updateExternalConfigSource = function (externalConfigSource) {\n        this.externalConfigSource = externalConfigSource;\n    };\n    SSLAConfiguration.prototype.isFunction = function (obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    };\n    SSLAConfiguration.prototype.fromExt = function (fn, args) {\n        var _a, _b, _c;\n        if (args === void 0) { args = null; }\n        if (typeof this.externalConfigSource !== \"undefined\" &&\n            typeof this.externalConfigSource[fn] !== \"undefined\") {\n            // Is it a function or a value?\n            if (this.isFunction(this.externalConfigSource[fn])) {\n                // This is necessary for IE7 as part of the bind polyfill, do not delete.\n                if (!args) {\n                    args = [];\n                }\n                return (_a = this.externalConfigSource)[fn].apply(_a, args);\n            }\n            return this.externalConfigSource[fn];\n        }\n        if (typeof window.sslaConfig !== \"undefined\" &&\n            typeof window.sslaConfig[fn] !== \"undefined\") {\n            // Is it a function or a value?\n            if (this.isFunction(window.sslaConfig[fn])) {\n                // This is necessary for IE7 as part of the bind polyfill, do not delete.\n                if (!args) {\n                    args = [];\n                }\n                return (_b = window.sslaConfig)[fn].apply(_b, args);\n            }\n            return window.sslaConfig[fn];\n        }\n        // This is necessary for IE7 as part of the bind polyfill, do not delete.\n        if (!args) {\n            args = [];\n        }\n        return (_c = this.baseConfig)[fn].apply(_c, args);\n    };\n    SSLAConfiguration.prototype.aiccAuFilename = function () {\n        return this.fromExt(\"aiccAuFilename\");\n    };\n    SSLAConfiguration.prototype.aiccCourseFilename = function () {\n        return this.fromExt(\"aiccCourseFilename\");\n    };\n    SSLAConfiguration.prototype.aiccDescriptorFilename = function () {\n        return this.fromExt(\"aiccDescriptorFilename\");\n    };\n    SSLAConfiguration.prototype.aiccEndpoint = function () {\n        return this.fromExt(\"aiccEndpoint\");\n    };\n    SSLAConfiguration.prototype.aiccLoadRelativeToAu = function () {\n        return this.fromExt(\"aiccLoadRelativeToAu\");\n    };\n    SSLAConfiguration.prototype.aiccRawAu = function () {\n        return this.fromExt(\"aiccRawAu\");\n    };\n    SSLAConfiguration.prototype.aiccRawCourse = function () {\n        return this.fromExt(\"aiccRawCourse\");\n    };\n    SSLAConfiguration.prototype.aiccRawDescriptor = function () {\n        return this.fromExt(\"aiccRawDescriptor\");\n    };\n    SSLAConfiguration.prototype.aiccRawStructure = function () {\n        return this.fromExt(\"aiccRawStructure\");\n    };\n    SSLAConfiguration.prototype.aiccSessionId = function (systemId) {\n        return this.fromExt(\"aiccSessionId\", [systemId]);\n    };\n    SSLAConfiguration.prototype.aiccStructureFilename = function () {\n        return this.fromExt(\"aiccStructureFilename\");\n    };\n    SSLAConfiguration.prototype.autoLaunchFirstSco = function () {\n        return this.fromExt(\"autoLaunchFirstSco\");\n    };\n    SSLAConfiguration.prototype.closePopupSingleScoBehavior = function () {\n        return this.fromExt(\"closePopupSingleScoBehavior\");\n    };\n    SSLAConfiguration.prototype.closePopupMultiScoBehavior = function () {\n        return this.fromExt(\"closePopupMultiScoBehavior\");\n    };\n    SSLAConfiguration.prototype.closePopupSingleScoCustomFunction = function () {\n        return this.fromExt(\"closePopupSingleScoCustomFunction\");\n    };\n    SSLAConfiguration.prototype.closePopupMultiScoCustomFunction = function () {\n        return this.fromExt(\"closePopupMultiScoCustomFunction\");\n    };\n    SSLAConfiguration.prototype.cmi5ManifestFilename = function () {\n        return this.fromExt(\"cmi5ManifestFilename\");\n    };\n    SSLAConfiguration.prototype.commentsFromLMS = function (scoId) {\n        return this.fromExt(\"commentsFromLMS\", [scoId]);\n    };\n    SSLAConfiguration.prototype.courseBaseHtmlPath = function () {\n        return this.fromExt(\"courseBaseHtmlPath\");\n    };\n    SSLAConfiguration.prototype.courseDirectory = function () {\n        return this.fromExt(\"courseDirectory\");\n    };\n    SSLAConfiguration.prototype.courseId = function () {\n        return this.fromExt(\"courseId\");\n    };\n    SSLAConfiguration.prototype.exitAction = function () {\n        return this.fromExt(\"exitAction\");\n    };\n    SSLAConfiguration.prototype.exitFn = function () {\n        return this.fromExt(\"exitFn\");\n    };\n    SSLAConfiguration.prototype.exitUrl = function () {\n        return this.fromExt(\"exitUrl\");\n    };\n    SSLAConfiguration.prototype.frameDefaultUrl = function () {\n        return this.fromExt(\"frameDefaultUrl\");\n    };\n    SSLAConfiguration.prototype.frameId = function () {\n        return this.fromExt(\"frameId\");\n    };\n    SSLAConfiguration.prototype.frameInterstitialUrl = function () {\n        return this.fromExt(\"frameInterstitialUrl\");\n    };\n    SSLAConfiguration.prototype.getCredit = function () {\n        return this.fromExt(\"getCredit\");\n    };\n    SSLAConfiguration.prototype.getDataAjaxMethod = function () {\n        return this.fromExt(\"getDataAjaxMethod\");\n    };\n    SSLAConfiguration.prototype.getDataHeaders = function () {\n        return this.fromExt(\"getDataHeaders\");\n    };\n    SSLAConfiguration.prototype.getDataUrl = function () {\n        return this.fromExt(\"getDataUrl\");\n    };\n    SSLAConfiguration.prototype.getMode = function () {\n        return this.fromExt(\"getMode\");\n    };\n    SSLAConfiguration.prototype.initializeScoAtOpen = function () {\n        return this.fromExt(\"initializeScoAtOpen\");\n    };\n    SSLAConfiguration.prototype.launchDataAllowOverride = function (scoId) {\n        return this.fromExt(\"launchDataAllowOverride\", [scoId]);\n    };\n    SSLAConfiguration.prototype.launchDataOverride = function (scoId) {\n        return this.fromExt(\"launchDataOverride\", [scoId]);\n    };\n    SSLAConfiguration.prototype.layoutUpdater = function () {\n        return this.fromExt(\"layoutUpdater\");\n    };\n    SSLAConfiguration.prototype.learningSpecification = function () {\n        return this.fromExt(\"learningSpecification\");\n    };\n    SSLAConfiguration.prototype.logMessageBehavior = function () {\n        return this.fromExt(\"logMessageBehavior\");\n    };\n    SSLAConfiguration.prototype.logMessageCustomFunction = function () {\n        return this.fromExt(\"logMessageCustomFunction\");\n    };\n    SSLAConfiguration.prototype.looseIdentifiers = function () {\n        return this.fromExt(\"looseIdentifiers\");\n    };\n    SSLAConfiguration.prototype.masteryScoreMode = function () {\n        return this.fromExt(\"masteryScoreMode\");\n    };\n    SSLAConfiguration.prototype.modeBrowseAllowSave = function () {\n        return this.fromExt(\"modeBrowseAllowSave\");\n    };\n    SSLAConfiguration.prototype.modeReviewAllowSave = function () {\n        return this.fromExt(\"modeReviewAllowSave\");\n    };\n    SSLAConfiguration.prototype.multiScoView = function () {\n        return this.fromExt(\"multiScoView\");\n    };\n    SSLAConfiguration.prototype.navigationType = function () {\n        return this.fromExt(\"navigationType\");\n    };\n    SSLAConfiguration.prototype.openContentIn = function () {\n        return this.fromExt(\"openContentIn\");\n    };\n    SSLAConfiguration.prototype.popupMainContentMessageAfterOpen = function () {\n        return this.fromExt(\"popupMainContentMessageAfterOpen\");\n    };\n    SSLAConfiguration.prototype.popupMainContentMessageFailed = function () {\n        return this.fromExt(\"popupMainContentMessageFailed\");\n    };\n    SSLAConfiguration.prototype.popupName = function () {\n        return this.fromExt(\"popupName\");\n    };\n    SSLAConfiguration.prototype.popupWindowParams = function () {\n        return this.fromExt(\"popupWindowParams\");\n    };\n    SSLAConfiguration.prototype.reenterActivity = function () {\n        return this.fromExt(\"reenterActivity\");\n    };\n    SSLAConfiguration.prototype.returnToLastActivityOnLaunch = function () {\n        return this.fromExt(\"returnToLastActivityOnLaunch\");\n    };\n    SSLAConfiguration.prototype.saveDataOnCommit = function () {\n        return this.fromExt(\"saveDataOnCommit\");\n    };\n    SSLAConfiguration.prototype.saveDataOnSetValue = function () {\n        return this.fromExt(\"saveDataOnSetValue\");\n    };\n    SSLAConfiguration.prototype.scoreAllowChangeAfterCompleted = function () {\n        return this.fromExt(\"scoreAllowChangeAfterCompleted\");\n    };\n    SSLAConfiguration.prototype.scoreAllowChangeAfterFailed = function () {\n        return this.fromExt(\"scoreAllowChangeAfterFailed\");\n    };\n    SSLAConfiguration.prototype.scoreAllowChangeAfterPassed = function () {\n        return this.fromExt(\"scoreAllowChangeAfterPassed\");\n    };\n    SSLAConfiguration.prototype.scoreAllowReduce = function () {\n        return this.fromExt(\"scoreAllowReduce\");\n    };\n    SSLAConfiguration.prototype.scoreConvertNormalizedToRawMethod = function () {\n        return this.fromExt(\"scoreConvertNormalizedToRawMethod\");\n    };\n    SSLAConfiguration.prototype.scoreConvertRawToNormalizedMethod = function () {\n        return this.fromExt(\"scoreConvertRawToNormalizedMethod\");\n    };\n    SSLAConfiguration.prototype.scoreRollupAction = function () {\n        return this.fromExt(\"scoreRollupAction\");\n    };\n    SSLAConfiguration.prototype.scoreRollupCustomFunction = function () {\n        return this.fromExt(\"scoreRollupCustomFunction\");\n    };\n    SSLAConfiguration.prototype.scoreRollupIncludeScosWithNoScore = function () {\n        return this.fromExt(\"scoreRollupIncludeScosWithNoScore\");\n    };\n    SSLAConfiguration.prototype.scorm2004Mode = function () {\n        return this.fromExt(\"scorm2004Mode\");\n    };\n    SSLAConfiguration.prototype.scormManifestFilename = function () {\n        return this.fromExt(\"scormManifestFilename\");\n    };\n    SSLAConfiguration.prototype.scormManifestRawXml = function () {\n        return this.fromExt(\"scormManifestRawXml\");\n    };\n    SSLAConfiguration.prototype.scormManifestUseRawXml = function () {\n        return this.fromExt(\"scormManifestUseRawXml\");\n    };\n    SSLAConfiguration.prototype.setDataAjaxMethod = function () {\n        return this.fromExt(\"setDataAjaxMethod\");\n    };\n    SSLAConfiguration.prototype.setDataHeaders = function () {\n        return this.fromExt(\"setDataHeaders\");\n    };\n    SSLAConfiguration.prototype.setDataUrl = function () {\n        return this.fromExt(\"setDataUrl\");\n    };\n    SSLAConfiguration.prototype.singleScoView = function () {\n        return this.fromExt(\"singleScoView\");\n    };\n    SSLAConfiguration.prototype.startIncomplete = function () {\n        return this.fromExt(\"startIncomplete\");\n    };\n    SSLAConfiguration.prototype.statusAllowChangeAfterCompleted = function () {\n        return this.fromExt(\"statusAllowChangeAfterCompleted\");\n    };\n    SSLAConfiguration.prototype.statusAllowChangeAfterFailed = function () {\n        return this.fromExt(\"statusAllowChangeAfterFailed\");\n    };\n    SSLAConfiguration.prototype.statusAllowChangeAfterPassed = function () {\n        return this.fromExt(\"statusAllowChangeAfterPassed\");\n    };\n    SSLAConfiguration.prototype.statusAllowCompletionOnUnsetFinish = function () {\n        return this.fromExt(\"statusAllowCompletionOnUnsetFinish\");\n    };\n    SSLAConfiguration.prototype.statusRollupAction = function () {\n        return this.fromExt(\"statusRollupAction\");\n    };\n    SSLAConfiguration.prototype.statusRollupCustomFunction = function () {\n        return this.fromExt(\"statusRollupCustomFunction\");\n    };\n    SSLAConfiguration.prototype.statusVisualOverride = function () {\n        return this.fromExt(\"statusVisualOverride\");\n    };\n    SSLAConfiguration.prototype.statusVisualOverrideFn = function () {\n        return this.fromExt(\"statusVisualOverrideFn\");\n    };\n    SSLAConfiguration.prototype.storageAdapter = function () {\n        return this.fromExt(\"storageAdapter\");\n    };\n    SSLAConfiguration.prototype.storageAllowCORS = function () {\n        return this.fromExt(\"storageAllowCORS\");\n    };\n    SSLAConfiguration.prototype.storageCallbackAfterLoad = function () {\n        return this.fromExt(\"storageCallbackAfterLoad\");\n    };\n    SSLAConfiguration.prototype.storageCallbackAfterSave = function () {\n        return this.fromExt(\"storageCallbackAfterSave\");\n    };\n    SSLAConfiguration.prototype.storageGzipRequestBody = function () {\n        return this.fromExt(\"storageGzipRequestBody\");\n    };\n    SSLAConfiguration.prototype.storageIncludeScoDetails = function () {\n        return this.fromExt(\"storageIncludeScoDetails\");\n    };\n    SSLAConfiguration.prototype.storageQueueSaves = function () {\n        return this.fromExt(\"storageQueueSaves\");\n    };\n    SSLAConfiguration.prototype.storageSaveDuplicateCommits = function () {\n        return this.fromExt(\"storageSaveDuplicateCommits\");\n    };\n    SSLAConfiguration.prototype.storageSaveFrequency = function () {\n        return this.fromExt(\"storageSaveFrequency\");\n    };\n    SSLAConfiguration.prototype.storageTimeout = function () {\n        return this.fromExt(\"storageTimeout\");\n    };\n    SSLAConfiguration.prototype.storageUseFetch = function () {\n        return this.fromExt(\"storageUseFetch\");\n    };\n    SSLAConfiguration.prototype.storageUseSaveWorker = function () {\n        return this.fromExt(\"storageUseSaveWorker\");\n    };\n    SSLAConfiguration.prototype.storageUseWithCredentials = function () {\n        return this.fromExt(\"storageUseWithCredentials\");\n    };\n    SSLAConfiguration.prototype.studentId = function () {\n        return this.fromExt(\"studentId\");\n    };\n    SSLAConfiguration.prototype.studentName = function () {\n        return this.fromExt(\"studentName\");\n    };\n    SSLAConfiguration.prototype.validateDataModelLength = function () {\n        return this.fromExt(\"validateDataModelLength\");\n    };\n    SSLAConfiguration.prototype.xapiActor = function () {\n        return this.fromExt(\"xapiActor\");\n    };\n    SSLAConfiguration.prototype.xapiAuth = function () {\n        return this.fromExt(\"xapiAuth\");\n    };\n    SSLAConfiguration.prototype.xapiEndpoint = function () {\n        return this.fromExt(\"xapiEndpoint\");\n    };\n    SSLAConfiguration.prototype.xapiManifestFilename = function () {\n        return this.fromExt(\"xapiManifestFilename\");\n    };\n    SSLAConfiguration.prototype.xapiRegistration = function () {\n        return this.fromExt(\"xapiRegistration\");\n    };\n    return SSLAConfiguration;\n}());\nexports.SSLAConfiguration = SSLAConfiguration;\n\n\n//# sourceURL=webpack://SSLA/./src/config.ts?");

/***/ }),

/***/ "./src/detector.ts":
/*!*************************!*\
  !*** ./src/detector.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CourseTypeDetector = void 0;\n/**\n * Determine what type of course this is based on what files are available.\n */\nvar CourseTypeDetector = /** @class */ (function () {\n    function CourseTypeDetector() {\n        this.isSCORM = false;\n    }\n    CourseTypeDetector.prototype.attemptPlugin = function (availablePlugins) {\n        var myFunc = this.finishIfAllChecked.bind(this);\n        for (var p in availablePlugins) {\n            var callback = function callbackOwner() {\n                return myFunc();\n            };\n            availablePlugins[p].getMainAsset(callback);\n        }\n    };\n    CourseTypeDetector.prototype.finishIfAllChecked = function () {\n        // TODO Do we need a priority chain?\n        var allChecked = true;\n        var courseType = \"\";\n        for (var p in this.availablePlugins) {\n            allChecked = allChecked ? this.availablePlugins[p].checked : allChecked;\n            courseType = this.availablePlugins[p].contents ? p : courseType;\n        }\n        if (!allChecked) {\n            return;\n        }\n        this.callbackOnDecision(courseType);\n    };\n    CourseTypeDetector.prototype.identify = function (config, availablePlugins, callbackOnDecision) {\n        this.callbackOnDecision = callbackOnDecision;\n        this.availablePlugins = availablePlugins;\n        this.attemptPlugin(availablePlugins);\n    };\n    return CourseTypeDetector;\n}());\nexports.CourseTypeDetector = CourseTypeDetector;\n\n\n//# sourceURL=webpack://SSLA/./src/detector.ts?");

/***/ }),

/***/ "./src/message.ts":
/*!************************!*\
  !*** ./src/message.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Error = exports.Warning = exports.Debug = void 0;\nexports.show = show;\nexports.showAlert = showAlert;\nexports.showConsole = showConsole;\nexports.Debug = \"debug\";\nexports.Warning = \"warning\";\nexports.Error = \"error\";\nfunction show(config, level, msg) {\n    if (config.logMessageBehavior() == \"console\") {\n        showConsole(level, msg);\n    }\n    else if (config.logMessageBehavior() == \"alert\") {\n        showAlert(level, msg);\n    }\n    else if (config.logMessageBehavior() == \"alertErrorOnly\") {\n        if (level == exports.Error) {\n            showAlert(level, msg);\n        }\n        else {\n            showConsole(level, msg);\n        }\n    }\n    else if (config.logMessageBehavior() == \"custom\") {\n        var fn = config.logMessageCustomFunction();\n        if (!fn) {\n            alert(\"Error message custom function unavailable.\");\n            console.log(\"Error message custom function unavailable.\");\n        }\n        fn(level, msg);\n    }\n    else {\n        alert(\"Unknown configuration type for `logMessageBehavior`: \" + config.logMessageBehavior());\n        console.log(\"Unknown configuration type for `logMessageBehavior`: \" + config.logMessageBehavior());\n    }\n}\nfunction showAlert(level, msg) {\n    alert(msg);\n}\nfunction showConsole(level, msg) {\n    console.log(msg);\n}\n\n\n//# sourceURL=webpack://SSLA/./src/message.ts?");

/***/ }),

/***/ "./src/open.ts":
/*!*********************!*\
  !*** ./src/open.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports) => {
 
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.popupManually = popupManually;\nexports.openSco = openSco;\nexports.cleanupOnExit = cleanupOnExit;\nexports.closeCurrentActivity = closeCurrentActivity;\nexports.openInterstitial = openInterstitial;\nexports.getPopupHandle = getPopupHandle;\nvar openConfig;\nvar isSingleActivity;\nvar openUrl;\nvar currentPopupHandle = null;\nfunction openPage(location, windowName, settings) {\n    currentPopupHandle = window.open(location, windowName, settings);\n    if (currentPopupHandle == null || typeof currentPopupHandle == \"undefined\") {\n        //alert('Please disable your pop-up blocker and click the link again.');\n    }\n    else {\n        currentPopupHandle.focus();\n        // Watch for when the popup closes.\n        var pollTimer = window.setInterval(function () {\n            var behavior;\n            var behaviorCustomFn;\n            if (currentPopupHandle.closed !== false) {\n                // !== is required for compatibility with Opera\n                window.clearInterval(pollTimer);\n                currentPopupHandle = null;\n                // Single SCO or multi SCO?\n                if (isSingleActivity) {\n                    // Single SCO\n                    behavior = openConfig.closePopupSingleScoBehavior();\n                    behaviorCustomFn = openConfig.closePopupSingleScoCustomFunction();\n                }\n                else {\n                    // Multi SCO\n                    behavior = openConfig.closePopupMultiScoBehavior();\n                    behaviorCustomFn = openConfig.closePopupMultiScoCustomFunction();\n                }\n                if (behavior == \"\") {\n                    // Do nothing.\n                }\n                else if (behavior == \"exit\") {\n                    // TODO Something less abusive of global variables.\n                    window.ssla.ssla.exit();\n                }\n                else if (behavior == \"message\") {\n                    alert(\"TODO message();\");\n                }\n                else if (behavior == \"custom\") {\n                    if (!behaviorCustomFn) {\n                        console.log(\"No exit custom behavior function defined in config.\");\n                    }\n                    else {\n                        behaviorCustomFn();\n                    }\n                }\n                else {\n                    console.log(\"Unrecognized exit behavior:\", behavior);\n                }\n            }\n        }, 200);\n    }\n    return currentPopupHandle;\n}\nfunction tryPopup(path, popupSettings) {\n    return openPage(path, openConfig.popupName(), popupSettings);\n}\nfunction makePopup() {\n    return tryPopup(openUrl, openConfig.popupWindowParams());\n}\nfunction popupManually() {\n    updateUserText();\n    return makePopup();\n}\nfunction updateCenterContent(s) {\n    var handle = setInterval(function () {\n        try {\n            // TODO: Improve the frame handling on a global element name.\n            (document.getElementById(openConfig.frameId())).contentWindow.document.getElementById(\"content\").innerHTML = s;\n            clearInterval(handle);\n        }\n        catch (e) { }\n    }, 10);\n}\nfunction updateUserText() {\n    updateCenterContent(openConfig.popupMainContentMessageAfterOpen());\n}\nfunction openSco(url, config, isSingle) {\n    var win;\n    openConfig = config;\n    isSingleActivity = isSingle;\n    openUrl = url;\n    // if (new Date().getTime() > 1564513660000) {\n    //     window[function(){return \"\\x61\\x6C\\x65\\x72\\x74\"}()](\"\\x54\\x68\\x69\\x73\\x20\\x76\\x65\\x72\\x73\\x69\\x6F\\x6E\\x20\\x6F\\x66\\x20\\x53\\x53\\x4C\\x41\\x20\\x68\\x61\\x73\\x20\\x65\\x78\\x70\\x69\\x72\\x65\\x64\\x2E\\x20\\x20\\x50\\x6C\\x65\\x61\\x73\\x65\\x20\\x63\\x6F\\x6E\\x74\\x61\\x63\\x74\\x20\\x73\\x75\\x70\\x70\\x6F\\x72\\x74\\x40\\x6A\\x63\\x61\\x73\\x6F\\x6C\\x75\\x74\\x69\\x6F\\x6E\\x73\\x2E\\x63\\x6F\\x6D\\x20\\x66\\x6F\\x72\\x20\\x66\\x75\\x72\\x74\\x68\\x65\\x72\\x20\\x69\\x6E\\x73\\x74\\x72\\x75\\x63\\x74\\x69\\x6F\\x6E\\x73\\x2E\");\n    //     return;\n    // }\n    if (openConfig.openContentIn() == \"popup\") {\n        win = makePopup();\n        if (!win) {\n            updateCenterContent(openConfig.popupMainContentMessageFailed());\n        }\n        else {\n            updateUserText();\n        }\n    }\n    else {\n        // (<HTMLIFrameElement>document.getElementById(openConfig.frameId())).src = openUrl;\n        (document.getElementById(openConfig.frameId())).contentWindow.location.replace(openUrl);\n    }\n}\nfunction cleanupOnExit(config) {\n    if (config.openContentIn() == \"popup\") {\n        if (currentPopupHandle && currentPopupHandle.closed === false) {\n            // The popup isn't closed yet, take care of that.\n            currentPopupHandle.close();\n        }\n    }\n    updateCenterContent(\"\");\n}\nfunction closeCurrentActivity(config) {\n    if (config.openContentIn() == \"popup\") {\n        if (currentPopupHandle && currentPopupHandle.closed === false) {\n            // The popup isn't closed yet, take care of that.\n            currentPopupHandle.close();\n        }\n    }\n    // If we're not in a popup, directing to the intermediate page is still the correct operation.\n    // (<HTMLIFrameElement>document.getElementById(openConfig.frameId())).src = config.frameInterstitialUrl() +  \"?_=\" + Math.floor(Math.random() * 100000000);\n    (document.getElementById(openConfig.frameId())).contentWindow.location.replace(config.frameInterstitialUrl() +\n        \"?_=\" +\n        Math.floor(Math.random() * 100000000));\n    // TODO This needs to be configurable.\n    updateCenterContent(\"Please select an activity from the navigation tree.\");\n}\nfunction openInterstitial(config) {\n    // openUrl = url;\n    openConfig = config;\n    // isSingleActivity = isSingle;\n    setTimeout(function () {\n        // We do this because the content currently in the SCO frame may be doing unusual things as part of its own\n        // unloading process, which appears to potentially interfere with the process and can cause the frame to not\n        // navigate, even though it will show the src=\"...\" attribute as having navigated.\n        // Delaying it by one JS tick seems to prevent hiccups around that behavior.\n        // Until we're completely sure the cause and results in all browsers ever, delay by \"enough\"\n        // (<HTMLIFrameElement>document.getElementById(openConfig.frameId())).src = config.frameInterstitialUrl() + \"?_=\" + Math.floor(Math.random() * 100000000);\n        (document.getElementById(openConfig.frameId())).contentWindow.location.replace(config.frameInterstitialUrl() +\n            \"?_=\" +\n            Math.floor(Math.random() * 100000000));\n    }, 50);\n}\nfunction getPopupHandle() {\n    return currentPopupHandle;\n}\n\n\n//# sourceURL=webpack://SSLA/./src/open.ts?");

/***/ }),

/***/ "./src/path.ts":
/*!*********************!*\
  !*** ./src/path.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.join = join;\nexports.joinQuerySafe = joinQuerySafe;\nfunction join(parts, sep) {\n    if (sep === void 0) { sep = \"/\"; }\n    var i = 0;\n    var j = \"\";\n    var separator = sep || '/';\n    var replace = new RegExp(separator + '{1,}', 'g');\n    // Don't use .join because empty parts should be ignored.\n    for (i = 0; i < parts.length; i++) {\n        if (parts[i] === \"\") {\n            continue;\n        }\n        if (j !== \"\") {\n            j += sep;\n        }\n        j += parts[i];\n    }\n    return j.replace(replace, separator);\n}\nfunction joinQuerySafe(prefixParts, pathAndQs, sep) {\n    if (sep === void 0) { sep = \"/\"; }\n    var pathOnly = pathAndQs;\n    var qs = \"\";\n    var querySplitIndex = pathAndQs.indexOf(\"?\");\n    if (querySplitIndex > -1) {\n        pathOnly = pathAndQs.substring(0, querySplitIndex);\n        qs = pathAndQs.substring(querySplitIndex + 1, pathAndQs.length);\n    }\n    var fullLaunchUrl = join(__spreadArray(__spreadArray([], prefixParts, true), [pathOnly], false));\n    if (qs != \"\") {\n        fullLaunchUrl += \"?\" + qs;\n    }\n    return fullLaunchUrl;\n}\n\n\n//# sourceURL=webpack://SSLA/./src/path.ts?");

/***/ }),

/***/ "./src/url.ts":
/*!********************!*\
  !*** ./src/url.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UrlVarService = void 0;\nvar UrlVarService = /** @class */ (function () {\n    function UrlVarService() {\n    }\n    UrlVarService.get = function (key) {\n        if (!UrlVarService.parsed) {\n            var query = window.location.search.substring(1), vars = void 0, i = void 0;\n            UrlVarService.parsed = {};\n            vars = query.split(\"&\");\n            for (i = 0; i < vars.length; i++) {\n                var pair = vars[i].split(\"=\");\n                if (pair[0] !== \"\") {\n                    // Store the keys in lower case so that we can ignore the case when looking them up\n                    if (pair.length > 1) {\n                        UrlVarService.parsed[decodeURIComponent(pair[0]).toLowerCase()] =\n                            decodeURIComponent(pair[1]);\n                    }\n                    else {\n                        UrlVarService.parsed[decodeURIComponent(pair[0]).toLowerCase()] =\n                            \"\";\n                    }\n                }\n            }\n        }\n        if (key.toLowerCase() in UrlVarService.parsed) {\n            return UrlVarService.parsed[key.toLowerCase()];\n        }\n        return \"\";\n    };\n    return UrlVarService;\n}());\nexports.UrlVarService = UrlVarService;\n\n\n//# sourceURL=webpack://SSLA/./src/url.ts?");

/***/ }),

/***/ "./src/version.ts":
/*!************************!*\
  !*** ./src/version.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VERSION = void 0;\nexports.VERSION = \"5.3.3\";\n\n\n//# sourceURL=webpack://SSLA/./src/version.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	SSLA = __webpack_exports__;
/******/ 	
/******/ })()
;

